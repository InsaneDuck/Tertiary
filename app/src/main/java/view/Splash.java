package view;

import com.formdev.flatlaf.intellijthemes.FlatOneDarkIJTheme;
import legendary.Legendary;
import org.apache.commons.io.FileUtils;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;

public class Splash extends JFrame
{
    private JProgressBar downloadProgress;
    private JPanel splash;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    public void initialise()
    {
        FlatOneDarkIJTheme.setup();
        this.setTitle("Downloading......");
        this.setContentPane(new Splash().splash);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        this.setVisible(true);
        this.pack();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        downloadLegendary();
    }

    private void downloadLegendary()
    {
        SwingWorker worker = new SwingWorker()
        {
            @Override
            protected Object doInBackground()
            {
                try
                {
                    InputStream inputStream = new URL(Legendary.LEGENDARY_GITHUB_LINUX).openStream();
                    ProgressMonitorInputStream progressMonitorInputStream = new ProgressMonitorInputStream(Splash.this, "", inputStream);
                    int downloadSize = inputStream.available();
                    ProgressMonitor progressMonitor = progressMonitorInputStream.getProgressMonitor();
                    progressMonitor.setMillisToDecideToPopup(0);
                    progressMonitor.setMillisToPopup(0);
                    progressMonitor.setMinimum(0);
                    progressMonitor.setMaximum(downloadSize);

                    FileUtils.copyInputStreamToFile(inputStream, new File(Legendary.LEGENDARY_DIRECTORY + "legendary"));
                    Runtime.getRuntime().exec(Legendary.FIX_PERMISSIONS, new String[]{}, new File(Legendary.LEGENDARY_DIRECTORY));
                }
                catch (IOException e)
                {
                    throw new RuntimeException(e);
                }
                return null;
            }

            @Override
            protected void done()
            {
                Splash.this.setVisible(false);
            }

        };
        worker.execute();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        splash = new JPanel();
        splash.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Downloading Legendary");
        splash.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        splash.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(15, 15), new Dimension(15, 15), new Dimension(15, 15), 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        splash.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(15, 15), new Dimension(15, 15), new Dimension(15, 15), 0, false));
        downloadProgress = new JProgressBar();
        splash.add(downloadProgress, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {return splash;}
}
